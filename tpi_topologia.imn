node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 14.200.11.1/30
	!
	interface eth1
	 ip address 14.200.11.5/30
	!
	interface eth0
	 ip address 14.200.11.9/30
	!
    }
    canvas c1
    iconcoords {533.0 216.0}
    labelcoords {503.0 241.0}
    interface-peer {eth0 n10}
    interface-peer {eth1 n3}
    interface-peer {eth2 n2}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.9
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:2::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.5
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:4::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:8::1
	ip route add 14.200.11.16/30 via 14.200.11.2
	ip route add 14.200.12.0/23 via 14.200.11.2
	ip route add 14.200.14.0/26 via 14.200.11.2
	ip route add 14.200.14.64/29 via 14.200.11.2
	ip route add 0.0.0.0/0 via 14.200.11.6
	
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 14.200.14.65/30
	 ipv6 address 200A:b8d:1014:F2::1/64
	!
	interface eth2
	 ip address 14.200.11.2/30
	!
	interface eth1
	 ip address 14.200.11.17/30
	!
	interface eth3
	 ipv6 address 2001:b9d:1014:9::2/64
	 ip address 14.200.11.13/30
	!
    }
    canvas c1
    iconcoords {836.0 285.0}
    labelcoords {841.0 274.0}
    interface-peer {eth1 n4}
    interface-peer {eth0 n7}
    interface-peer {eth2 n1}
    interface-peer {eth3 n3}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.14.65
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:3::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.17
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:7::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:8::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.13
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:9::1
	ip route add 14.200.12.0/23 via 14.200.14.66
	ip route add 14.200.14.0/26 via 14.200.14.66
	ip route add 14.200.14.68/30 via 14.200.14.66
	ip route add 0.0.0.0/0 via 14.200.11.14
	}
    }
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 ip address 14.200.11.14/30
	!
	interface eth1
	 ip address 14.200.10.6/30
	!
	interface eth0
	 ip address 14.200.10.9/30
	!
	interface eth4
	 ipv6 address 2001:b9d:1014:6::1/64
	 ip address 14.200.11.21/30
	!
	interface eth3
	 ipv6 address 2001:b9d:1014:4::1/64
	 ip address 14.200.11.6/30
	!
    }
    canvas c1
    iconcoords {533.0 534.0}
    labelcoords {531.0 595.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n5}
    interface-peer {eth3 n1}
    interface-peer {eth4 n15}
    interface-peer {eth2 n2}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.9
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.5
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:1::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.13
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:9::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.5
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:4::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.21
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:6::1
	ip route add 14.200.8.0/23 via 14.200.10.5
	ip route add 14.200.10.0/30 via 14.200.10.5
	ip route add 14.200.11.8/30 via 14.200.11.5
	ip route add 0.0.0.0/0 via 14.200.11.13
	}
    }
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 14.200.11.18/30
	!
	interface eth0
	 ip address 14.200.11.25/30
	!
    }
    canvas c1
    iconcoords {923.0 563.0}
    labelcoords {923.0 595.0}
    interface-peer {eth0 n15}
    interface-peer {eth1 n2}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.25
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:5::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.17
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:7::1
	
	ip route add 14.200.11.20/30 via 14.200.11.26
	ip route add 0.0.0.0/0 via 14.200.11.17
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth1
	 ip address 14.200.10.5/30
	!
	interface eth0
	 ip address 14.200.10.1/30
	!
	interface eth2
	 ipv6 address 200A:b8d:1014:1::1/64
	 ip address 14.200.8.1/23
	!
    }
    canvas c1
    iconcoords {217.0 534.0}
    labelcoords {189.0 558.0}
    services {IPForward StaticRoute}
    interface-peer {eth0 n6}
    interface-peer {eth2 n12}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.1
	#/sbin/ip route add 3ffe:4::/64 via 2001::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.5
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:1::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.8.1
	#/sbin/ip route add 3ffe:4::/64 via 200a:b8d:1014:1::1
	ip route add 0.0.0.0/0 via 14.200.10.6
	
	}
    }
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth1
	 ip address 14.200.10.10/30
	!
	interface eth0
	 ip address 14.200.10.2/30
	!
    }
    canvas c1
    iconcoords {365.0 768.0}
    labelcoords {365.0 800.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n3}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.1
	#/sbin/ip route add 3ffe:4::/64 via 2001::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.10.9
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014::1
	
	ip route add 14.200.8.0/23 via 14.200.10.1
	ip route add 0.0.0.0/0 via 14.200.10.9
	}
    }
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth1
	 ip address 14.200.14.69/30
	 ipv6 address 200A:b9d:1014:F3::1/64
	!
	interface eth0
	 ip address 14.200.14.66/30
	 ipv6 address 200A:b9d:1014:F2::2/64
	!
    }
    canvas c1
    iconcoords {1198.0 284.0}
    labelcoords {1201.0 267.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n8}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.14.65
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:f2::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.14.69
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:f3::1
	
	ip route add 14.200.12.0/23 via 14.200.14.70
	ip route add 14.200.14.0/26 via 14.200.14.70
	ip route add 0.0.0.0/0 via 14.200.14.65
	}
    }
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth1
	 ip address 14.200.14.70/30
	 ipv6 address 200A:b9d:1014:F3::2/64
	!
	interface eth0
	 ip address 14.200.12.1/23
	 ipv6 address 200A:b9d:1014:F0::1/64
	!
	interface eth2
	 ip address 14.200.14.1/26
	 ipv6 address 200A:b9d:1014:F1::1/64
	!
    }
    canvas c1
    iconcoords {1199.0 552.0}
    labelcoords {1179.0 579.0}
    interface-peer {eth0 n9}
    interface-peer {eth1 n7}
    interface-peer {eth2 n14}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.12.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:f3::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.14.69
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:f0::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.14.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:f1::1
	
	ip route add 0.0.0.0/0 via 14.200.14.69
	}
    }
}

node n9 {
    type router
    model host
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 14.200.12.2/23
	 ipv6 address 200A:b9d:1014:F0::2/64
	!
    }
    canvas c1
    iconcoords {1441.0 472.0}
    labelcoords {1470.3333333333333 490.6666666666667}
    interface-peer {eth0 n8}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 14.200.11.10/30
	 ipv6 address 2001:b9d:1014:2::10/64
	!
    }
    canvas c1
    iconcoords {445.0 50.0}
    labelcoords {445.0 82.0}
    interface-peer {eth0 n1}
}

node n11 {
    type router
    model host
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 14.200.8.2/23
	 ipv6 address 200A:b8d:1014:1::2/64
	!
    }
    canvas c1
    iconcoords {309.6666666666667 182.66666666666666}
    labelcoords {307.0 162.66666666666666}
    interface-peer {eth0 n12}
}

node n12 {
    type lanswitch
    network-config {
	hostname n12
	!
    }
    canvas c1
    iconcoords {214.0 359.0}
    labelcoords {214.0 383.0}
    interface-peer {e0 n5}
    interface-peer {e1 n11}
    interface-peer {e2 n13}
}

node n13 {
    type router
    model host
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 14.200.8.3/23
	 ipv6 address 200A:b8d:1014:1::3/64
	!
    }
    canvas c1
    iconcoords {126.0 172.66666666666666}
    labelcoords {155.33333333333334 143.33333333333334}
    interface-peer {eth0 n12}
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 14.200.14.2/26
	 ipv6 address 200A:b9d:1014:F1::2/64
	!
    }
    canvas c1
    iconcoords {1392.0 691.0}
    labelcoords {1428.0 703.0}
    interface-peer {eth0 n8}
}

node n15 {
    type router
    model router
    network-config {
	hostname n15
	!
	interface eth1
	 ip address 14.200.11.22/30
	!
	interface eth0
	 ip address 14.200.11.26/30
	!
    }
    canvas c1
    iconcoords {719.0 642.0}
    labelcoords {719.0 674.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n3}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.25
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:5::1
	#/sbin/ip route add 10.9.8.0/24 via 14.200.11.21
	#/sbin/ip route add 3ffe:4::/64 via 2001:b9d:1014:6::1
	ip route add 14.200.11.16/30 via 14.200.11.25
	ip route add 0.0.0.0/0 via 14.200.11.21
	}
    }
}

link l1 {
    nodes {n5 n6}
    bandwidth 0
}

link l3 {
    nodes {n5 n12}
    bandwidth 0
}

link l4 {
    nodes {n12 n11}
    bandwidth 0
}

link l5 {
    nodes {n12 n13}
    bandwidth 0
}

link l2 {
    nodes {n3 n6}
    bandwidth 0
}

link l6 {
    nodes {n5 n3}
    bandwidth 0
}

link l7 {
    nodes {n1 n10}
    bandwidth 0
}

link l9 {
    nodes {n3 n1}
    bandwidth 0
}

link l10 {
    nodes {n15 n4}
    bandwidth 0
}

link l11 {
    nodes {n3 n15}
    bandwidth 0
}

link l12 {
    nodes {n4 n2}
    bandwidth 0
}

link l8 {
    nodes {n2 n7}
    bandwidth 0
}

link l13 {
    nodes {n1 n2}
    bandwidth 0
}

link l14 {
    nodes {n3 n2}
    bandwidth 0
}

link l15 {
    nodes {n8 n9}
    bandwidth 0
}

link l16 {
    nodes {n7 n8}
    bandwidth 0
}

link l17 {
    nodes {n8 n14}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1600 850}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

